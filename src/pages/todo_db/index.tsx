import { type NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useState } from 'react';
import toast from 'react-hot-toast';

import { api } from '~/utils/api';
import { LoadingPage, LoadingSpinner } from '~/components/loading';
import useStore from '~/store/useStore';
import { TodosView } from './todo_view';

const CreateTodoWizard = () => {
  const user = 'fake_user_123';

  const [input, setInput] = useState('');

  const ctx = api.useContext();

  const { mutate, isLoading: isCreating } = api.todo.create.useMutation({
    onSuccess: () => {
      setInput('');
      void ctx.todo.getAll.invalidate();
    },
    onError: (e) => {
      const errorMessage = e.data?.zodError?.fieldErrors.content;
      if (errorMessage && errorMessage[0]) {
        toast.error(errorMessage[0]);
      } else {
        toast.error('Failed to post! Please try again later.');
      }
    },
  });

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <input
        placeholder="Type a Todo!"
        className="grow bg-transparent outline-none"
        type="text"
        value={input}
        onChange={(e) => setInput(e.target.value)}
        onKeyDown={(e) => {
          if (e.key === 'Enter') {
            e.preventDefault();
            if (input !== '') {
              mutate({ description: input });
            }
          }
        }}
        disabled={isCreating}
      />
      {input !== '' && !isCreating && (
        <button onClick={() => mutate({ description: input })}>Post</button>
      )}
      {isCreating && (
        <div className="flex items-center justify-center">
          <LoadingSpinner size={20} />
        </div>
      )}
    </div>
  );
};

const TodoList = () => {
  const { data, isLoading: todosLoading } = api.todo.getAll.useQuery();

  if (todosLoading)
    return (
      <div className="flex grow">
        <LoadingPage />
      </div>
    );

  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="flex grow flex-col overflow-y-scroll">
      <TodosView {...data} />
    </div>
  );
};

const TodoDB: NextPage = () => {
  api.todo.getAll.useQuery(); // Start fetching asap

  return (
    <>
      <Head>
        <title>T3 App Sample</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#02326d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Todo PAGE
          </h1>

          <CreateTodoWizard />
          <TodoList />
          <Link href="/">Home</Link>
        </div>
      </main>
    </>
  );
};

export default TodoDB;

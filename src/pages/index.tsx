import { type NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useState } from 'react';
import { api } from '~/utils/api';
import { introPrompt } from './constants/constants';

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: 'from tRPC' });

  // const userId = 'user123';
  // const introResponse = [];
  // const typeOfWorkIds = [];

  const [radioInput, setInput] = useState('');

  return (
    <>
      <Head>
        <title>T3 App Sample</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#02326d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Hello <span className="text-[hsl(234,100%,70%)]">World</span>
          </h1>

          <label
            htmlFor="countries"
            className="mb-2 block text-sm font-medium text-gray-100"
          >
            {introPrompt.Question}
          </label>
          <fieldset>
            <legend className="sr-only">Countries</legend>
            {introPrompt.Responses.map((question) => (
              <div
                className="mb-4 flex items-center"
                key={'question-option-' + question.id}
              >
                <input
                  id={'intro-question'}
                  type="radio"
                  name="intro-question"
                  value={radioInput}
                  onChange={(e) => setInput(e.target.value)}
                  className="h-4 w-4 border-gray-300 focus:ring-2 focus:ring-blue-300 dark:border-gray-600 dark:bg-gray-700 dark:focus:bg-blue-600 dark:focus:ring-blue-600"
                />
                <label
                  htmlFor={'question-option-' + question.id}
                  className="ml-2 block text-sm font-medium text-gray-900 dark:text-gray-300"
                >
                  {question.desc}
                </label>
              </div>
            ))}
          </fieldset>

          <button
            onClick={() => {
              console.log(`input value = ${radioInput}`);
            }}
          >
            Submit
          </button>

          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="/about"

              // state={ from: "occupation" }
            >
              <h3 className="text-2xl font-bold">About Page →</h3>
              <div className="text-lg">Routing with static url</div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href={'/some-random-route' + `${Date.now()}`}
            >
              <h3 className="text-2xl font-bold">Test Slugs →</h3>
              <div className="text-lg">/other-random-routes</div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="/todo"
            >
              <h3 className="text-2xl font-bold">Todo →</h3>
              <div className="text-lg">/todo</div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="/todo_db"
            >
              <h3 className="text-2xl font-bold">Todo-DB →</h3>
              <div className="text-lg">/todo_db</div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="/counter"
            >
              <h3 className="text-2xl font-bold">Counter →</h3>
              <div className="text-lg">/counter</div>
            </Link>
          </div>
          <p className="text-2xl text-white">
            {hello.data ? hello.data.greeting : 'Loading tRPC query...'}
          </p>
        </div>
      </main>
    </>
  );
};

export default Home;

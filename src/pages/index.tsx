import { type NextPage } from 'next';
import Head from 'next/head';
import { useState, useEffect } from 'react';
import {
  WorkTypeView,
  InteriorWorkView,
  ExteriorWorkView,
} from '~/pages/views';
import useStore from '~/store/useStore';

const Home: NextPage = () => {
  const {
    workType,
    interiorWork,
    exteriorWork,
    result,
    setWorkType,
    setInteriorWork,
    setExteriorWork,
    setResult,
  } = useStore((state) => state);

  // const [workType, setWorkType] = useState<string>('');
  // const [interiorWork, setInteriorWork] = useState<string[]>([]);
  // const [exteriorWork, setExteriorWork] = useState<string[]>([]);
  // const [result, setResult] = useState<string>('');

  useEffect(() => {
    if (workType === 'Interior') {
      if (
        interiorWork.includes('New bathroom') ||
        interiorWork.includes('New laundry room')
      ) {
        setResult('OTC review process with plans is required');
      } else if (interiorWork.length !== 0) {
        setResult('An OTC review process without plans is required');
      } else {
        setResult('');
      }
    } else if (workType === 'Exterior') {
      if (exteriorWork.includes('Other')) {
        setResult('An in-house review process is required.');
      } else if (
        exteriorWork.includes('Garage door replacement') ||
        exteriorWork.includes('Work on exterior doors')
      ) {
        setResult('OTC review process with plans is required');
      } else if (exteriorWork.includes('Re-roofing')) {
        setResult('OTC review process without plans is required');
      } else if (exteriorWork.includes('Building fences less than 6 feet')) {
        setResult('No building permit is required');
      } else {
        setResult('');
      }
    }
  }, [workType, interiorWork, exteriorWork]);

  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    // // this should be replaced with a real user ID
    // const userId = 'fake-user-id';
    // const workSelection = {
    //   userId,
    //   workType,
    //   interiorWork,
    //   exteriorWork,
    // };
    // try {
    //   await client.mutation('createWorkSelection', workSelection);
    //   setResult('Data submitted successfully');
    // } catch (error) {
    //   setResult('Error submitting data');
    // }
    return;
  };

  return (
    <>
      <Head>
        <title>T3 App Sample</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#02326d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div className="w-96 space-y-5 rounded-xl bg-white p-8 shadow-lg">
            <h1 className="text-center text-2xl font-bold text-blue-700">
              Permit Finder
            </h1>
            <form onSubmit={handleFormSubmit} className="space-y-5">
              <WorkTypeView onChange={setWorkType} />
              {workType === 'Interior' && (
                <InteriorWorkView onChange={setInteriorWork} />
              )}
              {workType === 'Exterior' && (
                <ExteriorWorkView onChange={setExteriorWork} />
              )}
              {/* <button
                type="submit"
                className="w-full rounded bg-blue-700 px-4 py-2 text-lg text-white hover:bg-blue-800"
              >
                Submit
              </button> */}
            </form>
            <p className="text-xl text-blue-700">{result}</p>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
